syntax = "proto3";

package william.admin.v1;

option go_package = "github.com/xdefrag/william/pkg/adminpb";

import "google/protobuf/timestamp.proto";

// AdminService provides administrative operations for William bot
service AdminService {
  // GetChatSummary retrieves summaries for one or multiple chats
  rpc GetChatSummary(GetChatSummaryRequest) returns (GetChatSummaryResponse);
  
  // GetUserSummary retrieves summaries for one or multiple users in a chat
  rpc GetUserSummary(GetUserSummaryRequest) returns (GetUserSummaryResponse);
  
  // TriggerSummarization manually triggers summarization for a chat
  rpc TriggerSummarization(TriggerSummarizationRequest) returns (TriggerSummarizationResponse);
}

// ChatSummary represents aggregated chat information
message ChatSummary {
  int64 id = 1;
  int64 chat_id = 2;
  string summary = 3;
  map<string, string> topics = 4;
  optional string next_events = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
}

// UserSummary represents user behavior analysis
message UserSummary {
  int64 id = 1;
  int64 chat_id = 2;
  int64 user_id = 3;
  map<string, string> likes = 4;
  map<string, string> dislikes = 5;
  map<string, string> competencies = 6;
  optional string traits = 7;
  google.protobuf.Timestamp created_at = 8;
  google.protobuf.Timestamp updated_at = 9;
}

// Chat summary requests and responses
message GetChatSummaryRequest {
  repeated int64 chat_ids = 1; // Can be one or multiple chat IDs
}

message GetChatSummaryResponse {
  repeated ChatSummary summaries = 1;
}

// User summary requests and responses
message GetUserSummaryRequest {
  int64 chat_id = 1;
  repeated int64 user_ids = 2; // Can be one or multiple user IDs
}

message GetUserSummaryResponse {
  repeated UserSummary summaries = 1;
}

// Manual summarization requests and responses
message TriggerSummarizationRequest {
  int64 chat_id = 1;
}

message TriggerSummarizationResponse {
  bool success = 1;
  optional string message = 2;
  optional string event_id = 3; // Event ID for tracking execution
} 